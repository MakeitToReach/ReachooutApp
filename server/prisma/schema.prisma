generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(cuid())
  email     String         @unique
  name      String         @unique
  password  String?
  avatarUrl String?
  createdAt DateTime       @default(now())
  googleId  String?        @unique
  updatedAt DateTime       @updatedAt
  projects  Project[]
  templates UserTemplate[]
}

model Project {
  id           String            @id @default(cuid())
  name         String
  subDomain    String            @unique
  customDomain String?           @unique
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  userId       String
  faviconUrl   String?
  description  String            @default("")
  user         User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  templates    ProjectTemplate[]

  @@index([userId])
}

model Template {
  id           String             @id @default(cuid())
  name         String             @unique
  thumbnailUrl String
  createdAt    DateTime           @default(now())
  tags         String[]
  updatedAt    DateTime           @updatedAt
  projects     ProjectTemplate[]
  categories   TemplateCategory[]
  users        UserTemplate[]

  @@index([tags])
}

model TemplateCategory {
  id         String   @id @default(cuid())
  templateId String
  category   String
  data       Json
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@unique([templateId, category])
  @@index([category])
}

model UserTemplate {
  data       Json?
  createdAt  DateTime @default(now())
  templateId String
  userId     String
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, templateId])
}

model ProjectTemplate {
  projectId  String
  templateId String
  data       Json?
  order      Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  
  // SEO fields for templates with order > 0
  slug       String?  
  seoTitle   String?
  seoDescription String?

  
  @@unique([projectId, slug])
  @@id([projectId, templateId, createdAt])
  @@index([projectId, order])
  @@index([slug])
}
